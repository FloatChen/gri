INSTRUCTIONS.
  This file is maintained in the Gri development CVS branch, but is
  not part of the Gri source.  The developers update this file
  individually, on their local machines, as tasks are done.  At each
  stage, they do a "cvs update" to let the other developers know of
  progress, and then update the SourceForge site by a shell command
  of the following forms:

 scp checklist_for_release dankelley@gri.sourceforge.net:/home/groups/g/gr/gri/htdocs
 scp checklist_for_release psg@gri.sourceforge.net:/home/groups/g/gr/gri/htdocs


CODING OF CHECKLIST.
  A "+" beside an item means that it has been done.
  A "-" beside an item means that it has NOT been done yet.

CHECKLIST.
  1+  DEK and PSG agree to freeze the code and the documentation.

  2+  DEK does a redhat build with the version on CVS, fixing any
      problems and letting PSG know when the build is clean.

  3+ PSG does a debian build with the version on CVS.  If there are any
      problems, return to step 1.

  4+  When it builds on redhat and debian, DEK "tags" this particular
      state of the code by using a cvs command such as e.g.
	  cvs tag -F "GRI_2_6_1"
      for the 2.6.1 version.

  5+  DEK creates an official tarball and uploads it to the SourceForge
      website (SF henceforth).

  6A+ DEK builds an official redhat package based on the official
      tarball.  If any problems, back to step 1.

  6B+ PSG builds an official Debian package based on the official
      tarball.  If any problems, back to step 1.

  7   PSG uploads unofficial Debian package to SF for Dan to pick up.
      DEK uploads the official redhat package to SF and creates a new 
      file release, picking up the Debian uploads at the same time.

   1. FTP to upload.sourceforge.net
   2. Login as "anonymous"
   3. Use your e-mail address as the password for this login
   4. Set your client to binary mode ("bin" on command-line clients)
   5. Change your current directory to /incoming ("cd /incoming")
   6. Upload the desired files for the release ("put filename")


   or if DEK uploads first, PSG uploads unofficial Debian package to SF and
      _EDITS_ the existing file release (Don't do a `quick release'!)

  9+  PSG uploads official Debian packages (built for `unstable`) to Debian.

  10+ DEK edits the SF webpage to indicate that a new version has
      been released.

  11+ PSG edits the SF webpage to point to new Debian packages.

  11+ DEK updates the HTML docs on SF.

  12+ DEK updates the PDF docs on SF.

  13+ DEK posts to SF news and to Open Discussion Forum.

  14- DEK builds a solaris version and installs it on SF.
