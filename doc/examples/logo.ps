%!PS-Adobe-2.0 EPSF-1.2
%%Creator: Gri2.6.0 (released 2000-Jun-23).  User=kelley, commandfile=/home/kelley/GRI-work/gri/doc/examples/logo.gri
%%Title: logo.ps
%%CreationDate: Fri Jun 23 09:32:15 2000
%%Pages: (atend)
%%BoundingBox: (atend)
%%TemplateBox: 0 0 612 792
%%DocumentFonts: (atend)
%%Endcomments
% NOTE: The Gri postscript dictionary is being converted to the Adobe
% Illustrator 3.0 dialect of PostScript, as described in the Adobe
% documents stored at URL
%   http://www.adobe.com/Support/TechNotes.html
% (as of Jan 1996, this doc is number 5007).  When the conversion
% is complete, the Adobe Illustrator drawing program -- and any
% program compatible with AI -- will be able to edit Gri output.
%
% The IslandDraw (TM) program is able to read Gri output
% at this time; remarkably, it can read/edit arbitrary PostScript.
%
% The definitions below are presented in the same order as the Adobe
% manual.  The stack configuration before and after is shown in curly
% brackets.  All the operators are listed, but only some are defined
% here. Most things are faithful, except that no distinction is made
% between colors for stroking and filling paths.  The string 'WRONGLY'
% appears with commands that are approximations.
%
% PDF-style abbreviations:
/rg {setrgbcolor} def   % {red green blue}            {-} set RGB color
/RG {setrgbcolor} def   % {red green blue}            {-} set RGB color
/q {gsave} def
/Q {grestore} def
/W {clip} def
/W* {eoclip} def
%
% Gri-specific abbreviations:
/hsb {sethsbcolor} def  % {hue saturation brightness} {-} set HSB color
%
% Following all try to mimic Adobe Illustrator
%
% Mimicking section 5.1 of Adobe manual:
%A                      % {flag A}          {-} Determine whether
                        %                       following object can
                        %                       be selected. Flag=1
                        %                       prevents selection;
                        %                       flag=0 allows it.

% Mimicking section 5.2 of Adobe manual:
%u                      % {u}               {-} start group
%U                      % end group
%q                      % as 'u' but first item is a clip path
%Q                      % as 'U' but first item is a clip path

% Mimicking section 5.3 of Adobe manual:
/g {setgray} def        % {gray g}          {-} Set gray for fill
                        %                       path, WRONGLY used
                        %                       for stroking also. 
/G {setgray} def        % As 'g', but for filling path.
%k                      % Set cmyk color for filling path.
%K                      % As 'k', but for stroking path.
%x                      % Set cmyk custom color for filling path.
%X                      % As 'x' but for stroking path.
%p                      % Define pattern for filling path.
%P                      % As 'p' but for stroking path.
%O                      % Specify whether overprinting for fill paths
%R                      % As 'O' but for stroking path.

% Mimicking section 5.4 of Adobe manual:
/d {setdash} def        % {[array] phase d} {-} Set dash.
/i {setflat} def        % {flatness i}      {-} Set flatness.
/j {setlinejoin} def    % {linejoin j}      {-} Set line join.
/J {setlinecap} def     % {linecap J}       {-} Set line cap.
/M {setmiterlimit} def  % {miterlimit M}    {-} Set miter limit.
/w {setlinewidth} def   % {linewidth w}     {-} Set line width.

% Mimicking section 5.5 of Adobe manual:
/m {moveto} def         % {x y m}           {-} Move to locn
/l {lineto} def         % {x y l}           {-} Draw line to locn
                        %                       not a smooth point.
                        %                       WRONGLY, no
                        %                       distinction is made
                        %                       between smooth and
                        %                       corner. 
%L                      % {x y L}           {-} As 'l' but a corner
%c                      % Bezier curve to smooth point.
%C                      % As 'c' but to corner point.
%v                      % Something else to do with Bezier.
%V                      % 
%y                      % 
%Y                      % 

% Mimicking section 5.6 of Adobe manual:
%N                      % {N}               {-} As 'n' for nondrawn stuff
/n {newpath} def        % {n}               {-} WRONGLY interpreted
                        %                       as path constructor
/F {fill} def           % {F}               {-} Fill current path.
%f                      % {f}               {-} 'F' but close first
/S {stroke} def         % {S}               {-} Stroke current path.
%s                      % {s}               {-} 'S' but close first
%B                      % {B}               {-} As 's' but don't empty path.
%b                      % {b}               {-} As 'f' but don't empty path.
%H                      % no-op (weird huh?)
/h {closepath} def      % {h}               {-} Close  current path
%W                      % Used to create masks.

% Mimicking section 5.7 of Adobe manual:
%a                      % Begin text block ...
%e                      % Similar to 'a' but ...
%I                      % Similar to 'a' but ...
%o                      % Similar to 'a' but ...
%r                      % Similar to 'a' but ...
%t                      % {len (string) t}  {-} Render string.
%T                      % End block of text

% That's the end of the Illustrator stuff. Following are some Gri
% definitions which provide a temporary way of handling fonts. 
/sf {setfont} def       % {fontname sf}     {-} Set font name.
/sh {show} def          % {(text) sh}       {-} Show text.
/sc {scalefont} def     % {size sc}         {-} Scale font.
% Gri items which should be translated to Illustrator format:
/rl {rlineto} def
/rm {rmoveto} def
% Procedures
/cimdict 7 dict def
/cim {
 cimdict begin
 /cl exch def
 /rw exch def
 /yur exch def
 /xur exch def
 /yll exch def
 /xll exch def
 q
 xll yll translate
 xur xll sub yur yll sub scale
 /do cl 3 mul string def
 cl rw 8 [cl 0 0 rw neg 0 rw] {currentfile do readhexstring pop} false 3 colorimage
 Q
 end
} def
/imdict 14 dict def
/im {
 imdict begin
 /cl exch def
 /rw exch def
 /yur exch def
 /xur exch def
 /yll exch def
 /xll exch def
 /imagemap exch def
 q
 % Add the mapping to the transfer function (ref: white book, p 743.
 [{255 mul cvi imagemap exch get} /exec load currenttransfer /exec load]
   cvx settransfer
 xll yll translate
 xur xll sub yur yll sub scale
 /do cl string def
 cl rw 8 [cl 0 0 rw neg 0 rw] {currentfile do readhexstring pop}image
 Q
 end
} def
/frdict  5 dict def
/fr {
 frdict begin
 /yt exch def
 /xr exch def
 /yb exch def
 /xl exch def
 n
 xl yb m
 xl yt l
 xr yt l
 xr yb l
 h
 F
 n
 end
} def
/plusdict 3 dict def
/_plus {
 plusdict begin
 dup 0.5 mul /t0 exch def
 /t1 exch def
 0 t0 rm
 0 t1 neg rl
 t0 neg t0 rm
 t1 0 rl
 t0 neg 0 rm
 end
} def
/timesdict 3 dict def
/_times {
 timesdict begin
 dup 0.353553 mul /t0 exch def
 0.707106 mul /t1 exch def
 t0 neg t0 rm
 t1 dup neg rl
 t1 neg 0 rm
 t1 dup rl
 t0 neg dup rm
 end
} def
/boxdict 3 dict def
/_box {
 boxdict begin
 dup 0.5 mul /t0 exch def
 1 mul /t1 exch def
 t0 neg t0 rm
 t1 0 rl
 0 t1 neg rl
 t1 neg 0 rl
 h
 t0 dup neg rm
 end
} def
/filledboxdict 3 dict def
/_filledbox {
 filledboxdict begin
 dup 0.5 mul /t0 exch def
 1 mul /t1 exch def
 t0 neg t0 rm
 t1 0 rl
 0 t1 neg rl
 t1 neg 0 rl
 h
 t0 dup neg rm
 F end
} def
/diamonddict 2 dict def
/_diamond {
 diamonddict begin
 0.5 mul /t0 exch def
 t0 neg 0 rm
 t0 dup rl
 t0 dup neg rl
 t0 neg dup rl
 h
 t0 0 rm
 end
} def
/filleddiamonddict 2 dict def
/_filleddiamond {
 filleddiamonddict begin
 0.5 mul /t0 exch def
 t0 neg 0 rm
 t0 dup rl
 t0 dup neg rl
 t0 neg dup rl
 h
 t0 0 rm
 F end
} def
/triangleupdict 5 dict def
/_triangleup {
 triangleupdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 neg rm
 t1 t2 rl
 t1 t2 neg rl
 h
 t1 t0 rm
 end
} def
/filledtriangleupdict 5 dict def
/_filledtriangleup {
 filledtriangleupdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 neg rm
 t1 t2 rl
 t1 t2 neg rl
 h
 t1 t0 rm
 F end
} def
/trianglerightdict 5 dict def
/_triangleright {
 trianglerightdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 neg t1 rm
 t2 t1 neg rl
 t2 neg t1 neg rl
 h
 t0 t1 neg rm
 end
} def
/filledtrianglerightdict 5 dict def
/_filledtriangleright {
 filledtrianglerightdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 neg t1 rm
 t2 t1 neg rl
 t2 neg t1 neg rl
 h
 t0 t1 neg rm
 F end
} def
/triangledowndict 5 dict def
/_triangledown {
 triangledowndict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 rm
 t3 0 rl
 t1 neg t2 neg rl
 h
 t1 t0 neg rm
 end
} def
/filledtriangledowndict 5 dict def
/_filledtriangledown {
 filledtriangledowndict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 rm
 t3 0 rl
 t1 neg t2 neg rl
 h
 t1 t0 neg rm
 F end
} def
/triangleleftdict 5 dict def
/_triangleleft {
 triangleleftdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 t1 rm
 0 t3 neg rl
 t2 neg t1 rl
 h
 t0 neg t1 neg rm
 end
} def
/filledtriangleleftdict 5 dict def
/_filledtriangleleft {
 filledtriangleleftdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 t1 rm
 0 t3 neg rl
 t2 neg t1 rl
 h
 t0 neg t1 neg rm
 F end
} def
/circdict 5 dict def
/_circ {
 circdict begin
 0.5 mul /t0 exch def
 currentpoint
 /t2 exch def
 /t1 exch def
 S n t1 t2 t0 0 360 arc
 t1 t2 m
 end
} def
/bulldict 3 dict def
/_bull {
 bulldict begin
 0.5 mul /r exch def
 currentpoint /y exch def /x exch def
 S n x y r 0 360 arc h F S
 end
} def
/filledhalfmoonupdict 3 dict def
/_filledhalfmoonup {
 bulldict begin
 0.5 mul /r exch def
 currentpoint /y exch def /x exch def
 S n x y r 0 180 arc h F S
 end
} def
/filledhalfmoondowndict 3 dict def
/_filledhalfmoondown {
 bulldict begin
 0.5 mul /r exch def
 currentpoint /y exch def /x exch def
 S n x y r 180 360 arc h F S
 end
} def
1 1 scale
10.0 M
1 j
/Courier findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Courier-ISOLatin1 exch definefont pop
/Courier-Bold findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Courier-Bold-ISOLatin1 exch definefont pop
/Helvetica findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Helvetica-ISOLatin1 exch definefont pop
/Helvetica-Bold findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Helvetica-Bold-ISOLatin1 exch definefont pop
/Palatino-Roman findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Palatino-Roman-ISOLatin1 exch definefont pop
/Palatino-Bold findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Palatino-Bold-ISOLatin1 exch definefont pop
/Palatino-Italic findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Palatino-Italic-ISOLatin1 exch definefont pop
/Symbol findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Symbol-ISOLatin1 exch definefont pop
/Times findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Times-ISOLatin1 exch definefont pop
/Times-Bold findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Times-Bold-ISOLatin1 exch definefont pop
/Times-Roman findfont dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse } forall
  /Encoding ISOLatin1Encoding def
  currentdict
end
/Times-Roman-ISOLatin1 exch definefont pop
%%EndProlog
%%Page: 1 1
/Helvetica-ISOLatin1 findfont 12.00 sc sf
%gri:# Draw a Gri logo.  NOTE: Only 4 lines of this file
%gri:# are not comments.  So this script is simpler than
%gri:# it looks at first glance!
%gri:
%gri:# Next two lines define the coordinate, in centimeters
%gri:# on the page, of the bottom-left corner of the logo.
%gri:.x. = 2
%gri:.y. = 2
%gri:
%gri:# Next line defines the height of the logo,
%gri:# in centimeters.
%gri:.h. = 3
%gri:
%gri:# Draw the logo.  The "4" indicates the style of logo.
%gri:# Other choices are 0, 1, 2 and 3 ... try them for fun!
%gri:
%gri:# The words "red" and "blue" are the colors of the
%gri:# logo and its shadow.
%gri:draw gri logo .x. .y. .h. 4 red blue
0 0 1 rg
0 0 1 RG
1.0 i 0 J 1 j 0.709 w 10.0 M [] 0 d
93.60 71.41 m
93.60 92.66 l
123.57 92.66 l
123.57 78.73 l
122.56 73.67 l
120.72 69.32 l
117.70 65.31 l
114.17 62.00 l
110.48 59.56 l
106.96 57.82 l
103.10 56.43 l
99.24 55.38 l
96.38 55.04 l
93.19 55.04 l
89.84 55.56 l
86.48 56.78 l
81.95 58.69 l
77.59 61.48 l
74.90 63.22 l
72.05 65.66 l
69.03 68.62 l
66.34 72.28 l
62.98 78.03 l
61.47 82.91 l
60.13 88.48 l
59.46 93.36 l
59.46 98.58 l
59.63 103.11 l
60.47 108.34 l
62.15 114.08 l
63.82 118.44 l
66.01 121.92 l
69.36 126.45 l
73.05 129.76 l
78.93 133.94 l
83.46 135.86 l
87.32 137.43 l
91.52 138.47 l
95.38 139.17 l
99.80 139.69 l
156.30 139.69 l
162.84 139.52 l
167.04 139.17 l
170.90 138.47 l
175.77 136.55 l
178.45 135.16 l
180.46 133.94 l
183.49 131.50 l
185.33 129.24 l
186.84 126.28 l
187.68 123.14 l
188.35 118.27 l
187.68 114.08 l
186.34 111.30 l
184.32 107.64 l
181.47 103.98 l
178.79 101.19 l
174.59 97.54 l
170.56 94.23 l
166.87 91.79 l
162.34 88.31 l
156.63 84.30 l
152.44 81.51 l
148.07 78.73 l
139.85 74.02 l
138.51 75.94 l
144.55 79.94 l
151.26 84.65 l
160.33 91.44 l
165.36 95.62 l
169.72 99.63 l
173.75 103.81 l
176.27 107.12 l
177.95 110.08 l
178.95 113.21 l
179.12 116.70 l
178.95 120.88 l
177.78 124.54 l
175.60 128.54 l
172.74 131.50 l
167.37 134.64 l
163.51 135.86 l
158.81 136.90 l
153.44 137.30 l
108.30 137.30 l
105.11 136.96 l
100.75 136.38 l
96.05 135.16 l
91.68 133.77 l
88.33 132.20 l
85.14 130.28 l
82.29 128.19 l
79.26 125.58 l
77.59 123.32 l
74.73 119.48 l
73.22 115.65 l
71.38 110.77 l
70.20 105.03 l
69.70 99.98 l
69.87 94.58 l
70.37 88.65 l
71.21 82.91 l
72.72 77.68 l
74.90 71.93 l
77.59 66.53 l
80.77 62.35 l
84.47 59.56 l
88.66 57.82 l
94.37 56.95 l
99.40 57.47 l
103.94 59.22 l
108.47 62.18 l
111.99 65.49 l
115.35 69.49 l
117.03 73.50 l
117.53 76.63 l
117.36 80.47 l
115.85 84.47 l
113.33 87.09 l
110.31 88.48 l
107.63 88.48 l
105.55 88.05 l
103.84 87.20 l
102.14 86.35 l
100.43 85.07 l
98.72 83.36 l
97.01 80.80 l
95.31 76.53 l
93.60 71.41 l
135.32 130.46 m
135.32 55.38 l
130.12 55.38 l
130.12 110.43 l
130.03 113.56 l
129.78 116.17 l
128.94 119.48 l
127.60 122.45 l
125.08 125.75 l
122.56 127.85 l
119.54 129.06 l
115.01 130.28 l
112.83 130.63 l
135.15 130.63 l
164.52 86.56 m
168.21 82.91 l
173.42 78.38 l
178.95 73.85 l
184.32 69.67 l
191.04 64.96 l
197.42 60.78 l
204.97 55.73 l
203.79 54.34 l
199.93 56.26 l
193.72 58.87 l
186.84 63.05 l
180.80 66.53 l
175.43 70.02 l
170.73 73.15 l
167.37 75.76 l
163.18 78.90 l
158.81 82.38 l
164.52 86.39 l
214.19 139.34 m
214.19 55.38 l
208.82 55.38 l
208.82 120.53 l
208.66 125.23 l
208.16 128.54 l
206.81 132.20 l
204.13 134.46 l
200.44 136.55 l
197.08 138.12 l
193.05 139.34 l
214.03 139.34 l
h
F
% END GriPath stroke/fill
1 0 0 rg
1 0 0 RG
1.0 i 0 J 1 j 0.709 w 10.0 M [] 0 d
91.04 73.97 m
91.04 95.22 l
121.01 95.22 l
121.01 81.29 l
120.00 76.23 l
118.16 71.88 l
115.14 67.87 l
111.61 64.56 l
107.92 62.13 l
104.40 60.38 l
100.54 58.99 l
96.68 57.95 l
93.82 57.60 l
90.63 57.60 l
87.28 58.12 l
83.92 59.34 l
79.39 61.25 l
75.03 64.04 l
72.34 65.78 l
69.49 68.22 l
66.47 71.18 l
63.78 74.84 l
60.42 80.59 l
58.91 85.47 l
57.57 91.04 l
56.90 95.92 l
56.90 101.14 l
57.07 105.67 l
57.91 110.90 l
59.59 116.65 l
61.26 121.00 l
63.45 124.48 l
66.80 129.01 l
70.49 132.32 l
76.37 136.50 l
80.90 138.42 l
84.76 139.99 l
88.96 141.03 l
92.82 141.73 l
97.24 142.25 l
153.74 142.25 l
160.28 142.08 l
164.48 141.73 l
168.34 141.03 l
173.21 139.11 l
175.89 137.72 l
177.90 136.50 l
180.93 134.06 l
182.77 131.80 l
184.28 128.84 l
185.12 125.70 l
185.79 120.83 l
185.12 116.65 l
183.78 113.86 l
181.76 110.20 l
178.91 106.54 l
176.23 103.76 l
172.03 100.10 l
168.00 96.79 l
164.31 94.35 l
159.78 90.87 l
154.07 86.86 l
149.88 84.07 l
145.51 81.29 l
137.29 76.58 l
135.95 78.50 l
141.99 82.51 l
148.70 87.21 l
157.76 94.00 l
162.80 98.18 l
167.16 102.19 l
171.19 106.37 l
173.71 109.68 l
175.39 112.64 l
176.39 115.77 l
176.56 119.26 l
176.39 123.44 l
175.22 127.10 l
173.04 131.10 l
170.18 134.06 l
164.81 137.20 l
160.95 138.42 l
156.25 139.46 l
150.88 139.86 l
105.74 139.86 l
102.55 139.52 l
98.19 138.94 l
93.49 137.72 l
89.12 136.33 l
85.77 134.76 l
82.58 132.84 l
79.72 130.75 l
76.70 128.14 l
75.03 125.88 l
72.17 122.04 l
70.66 118.21 l
68.82 113.34 l
67.64 107.59 l
67.14 102.54 l
67.31 97.14 l
67.81 91.21 l
68.65 85.47 l
70.16 80.24 l
72.34 74.49 l
75.03 69.09 l
78.21 64.91 l
81.91 62.13 l
86.10 60.38 l
91.81 59.51 l
96.84 60.04 l
101.37 61.78 l
105.91 64.74 l
109.43 68.05 l
112.79 72.05 l
114.47 76.06 l
114.97 79.20 l
114.80 83.03 l
113.29 87.03 l
110.77 89.65 l
107.75 91.04 l
105.07 91.04 l
102.99 90.61 l
101.28 89.76 l
99.58 88.91 l
97.87 87.63 l
96.16 85.92 l
94.45 83.36 l
92.75 79.09 l
91.04 73.97 l
132.76 133.02 m
132.76 57.95 l
127.56 57.95 l
127.56 112.99 l
127.47 116.12 l
127.22 118.74 l
126.38 122.04 l
125.04 125.01 l
122.52 128.32 l
120.00 130.41 l
116.98 131.62 l
112.45 132.84 l
110.27 133.19 l
132.59 133.19 l
161.96 89.12 m
165.65 85.47 l
170.86 80.94 l
176.39 76.41 l
181.76 72.23 l
188.48 67.53 l
194.86 63.34 l
202.41 58.29 l
201.23 56.90 l
197.37 58.82 l
191.16 61.43 l
184.28 65.61 l
178.24 69.09 l
172.87 72.58 l
168.17 75.71 l
164.81 78.32 l
160.62 81.46 l
156.25 84.94 l
161.96 88.95 l
211.63 141.90 m
211.63 57.95 l
206.26 57.95 l
206.26 123.09 l
206.10 127.79 l
205.60 131.10 l
204.25 134.76 l
201.57 137.02 l
197.88 139.11 l
194.52 140.68 l
190.49 141.90 l
211.47 141.90 l
h
F
% END GriPath stroke/fill
%gri:
%gri:# For help on this command, type
%gri:#     info gri commands draw 'draw gri logo'
%gri:# at the unix prompt, to go directly to the
%gri:# relevant portion of the manual, or just type
%gri:#     info gri
%gri:# and look around.  In particular, typing
%gri:#     i
%gri:# once you're in the gri documentation will
%gri:# give you an index; type
%gri:#     logo
%gri:# then and you'll go to the right spot.  You may
%gri:# prefer, instead of using "info", to browse the
%gri:# online HTML documents.  Most people do!  Indeed
%gri:# you're probably reading this in a browser that
%gri:# is pointed to the documents, so I'll say no more. 
%gri:
%gri:# NOTE: you might also like to investigate the
%gri:# Gri command
%gri:#     read colornames from RGB "/usr/lib/X11/rgb.txt"
%gri:# since that will give you access to about 800 colors,
%gri:# in case you find the present colors garish.  Again,
%gri:# the easy way to find out about that command is
%gri:# to look up
%gri:#     colornames
%gri:# in the indexx.
%gri:
%gri:
showpage
%%Trailer
%%BoundingBox: 55 52 216 144
%%DocumentFonts: Courier Helvetica Palatino-Roman Palatino-Italic Symbol Times-Roman
%%Pages: 1
