%!PS-Adobe-2.0 EPSF-1.2
%%Creator: Gri2.1.9 for kelley. [example -> example.ps]
%%Title: example.ps
%%CreationDate: Fri Mar 28 14:03:51 1997
%%Pages: (atend)
%%BoundingBox: (atend)
%%TemplateBox: 0 0 612 792
%%DocumentFonts: (atend)
%%Endcomments
% NOTE: The Gri postscript dictionary is being converted to the Adobe
% Illustrator 3.0 dialect of PostScript, as described in the Adobe
% documents stored at URL
%   http://www.adobe.com/Support/TechNotes.html
% (as of Jan 1996, this doc is number 5007).  When the conversion
% is complete, the Adobe Illustrator drawing program -- and any
% program compatible with AI -- will be able to edit Gri output.
%
% The IslandDraw (TM) program is able to read Gri output
% at this time; remarkably, it can read/edit arbitrary PostScript.
%
% The definitions below are presented in the same order as the Adobe
% manual.  The stack configuration before and after is shown in curly
% brackets.  All the operators are listed, but only some are defined
% here. Most things are faithful, except that no distinction is made
% between colors for stroking and filling paths.  The string 'WRONGLY'
% appears with commands that are approximations.
%
% PDF-style abbreviations:
/rg {setrgbcolor} def   % {red green blue}            {-} set RGB color
/RG {setrgbcolor} def   % {red green blue}            {-} set RGB color
/q {gsave} def
/Q {grestore} def
/W {clip} def
/W* {eoclip} def
%
% Gri-specific abbreviations:
/hsb {sethsbcolor} def  % {hue saturation brightness} {-} set HSB color
%
% Following all try to mimic Adobe Illustrator
%
% Mimicking section 5.1 of Adobe manual:
%A                      % {flag A}          {-} Determine whether
                        %                       following object can
                        %                       be selected. Flag=1
                        %                       prevents selection;
                        %                       flag=0 allows it.

% Mimicking section 5.2 of Adobe manual:
%u                      % {u}               {-} start group
%U                      % end group
%q                      % as 'u' but first item is a clip path
%Q                      % as 'U' but first item is a clip path

% Mimicking section 5.3 of Adobe manual:
/g {setgray} def        % {gray g}          {-} Set gray for fill
                        %                       path, WRONGLY used
                        %                       for stroking also. 
/G {setgray} def        % As 'g', but for filling path.
%k                      % Set cmyk color for filling path.
%K                      % As 'k', but for stroking path.
%x                      % Set cmyk custom color for filling path.
%X                      % As 'x' but for stroking path.
%p                      % Define pattern for filling path.
%P                      % As 'p' but for stroking path.
%O                      % Specify whether overprinting for fill paths
%R                      % As 'O' but for stroking path.

% Mimicking section 5.4 of Adobe manual:
/d {setdash} def        % {[array] phase d} {-} Set dash.
/i {setflat} def        % {flatness i}      {-} Set flatness.
/j {setlinejoin} def    % {linejoin j}      {-} Set line join.
/J {setlinecap} def     % {linecap J}       {-} Set line cap.
/M {setmiterlimit} def  % {miterlimit M}    {-} Set miter limit.
/w {setlinewidth} def   % {linewidth w}     {-} Set line width.

% Mimicking section 5.5 of Adobe manual:
/m {moveto} def         % {x y m}           {-} Move to locn
/l {lineto} def         % {x y l}           {-} Draw line to locn
                        %                       not a smooth point.
                        %                       WRONGLY, no
                        %                       distinction is made
                        %                       between smooth and
                        %                       corner. 
%L                      % {x y L}           {-} As 'l' but a corner
%c                      % Bezier curve to smooth point.
%C                      % As 'c' but to corner point.
%v                      % Something else to do with Bezier.
%V                      % 
%y                      % 
%Y                      % 

% Mimicking section 5.6 of Adobe manual:
%N                      % {N}               {-} As 'n' for nondrawn stuff
/n {newpath} def        % {n}               {-} WRONGLY interpreted
                        %                       as path constructor
/F {fill} def           % {F}               {-} Fill current path.
%f                      % {f}               {-} 'F' but close first
/S {stroke} def         % {S}               {-} Stroke current path.
%s                      % {s}               {-} 'S' but close first
%B                      % {B}               {-} As 's' but don't empty path.
%b                      % {b}               {-} As 'f' but don't empty path.
%H                      % no-op (weird huh?)
/h {closepath} def      % {h}               {-} Close  current path
%W                      % Used to create masks.

% Mimicking section 5.7 of Adobe manual:
%a                      % Begin text block ...
%e                      % Similar to 'a' but ...
%I                      % Similar to 'a' but ...
%o                      % Similar to 'a' but ...
%r                      % Similar to 'a' but ...
%t                      % {len (string) t}  {-} Render string.
%T                      % End block of text

% That's the end of the Illustrator stuff. Following are some Gri
% definitions which provide a temporary way of handling fonts. 
/sf {setfont} def       % {fontname sf}     {-} Set font name.
/sh {show} def          % {(text) sh}       {-} Show text.
/sc {scalefont} def     % {size sc}         {-} Scale font.
% Gri items which should be translated to Illustrator format:
/rl {rlineto} def
/rm {rmoveto} def
% Procedures
/cimdict 7 dict def
/cim {
 cimdict begin
 /cl exch def
 /rw exch def
 /yur exch def
 /xur exch def
 /yll exch def
 /xll exch def
 q
 xll yll translate
 xur xll sub yur yll sub scale
 /do cl 3 mul string def
 cl rw 8 [cl 0 0 rw neg 0 rw] {currentfile do readhexstring pop} false 3 colorimage
 Q
 end
} def
/imdict 14 dict def
/im {
 imdict begin
 /cl exch def
 /rw exch def
 /yur exch def
 /xur exch def
 /yll exch def
 /xll exch def
 /imagemap exch def
 q
 % Add the mapping to the transfer function (ref: white book, p 743.
 [{255 mul cvi imagemap exch get} /exec load currenttransfer /exec load]
   cvx settransfer
 xll yll translate
 xur xll sub yur yll sub scale
 /do cl string def
 cl rw 8 [cl 0 0 rw neg 0 rw] {currentfile do readhexstring pop}image
 Q
 end
} def
/frdict  5 dict def
/fr {
 frdict begin
 /yt exch def
 /xr exch def
 /yb exch def
 /xl exch def
 n
 xl yb m
 xl yt l
 xr yt l
 xr yb l
 h
 F
 n
 end
} def
/plusdict 3 dict def
/_plus {
 plusdict begin
 dup 0.5 mul /t0 exch def
 /t1 exch def
 0 t0 rm
 0 t1 neg rl
 t0 neg t0 rm
 t1 0 rl
 t0 neg 0 rm
 end
} def
/timesdict 3 dict def
/_times {
 timesdict begin
 dup 0.353553 mul /t0 exch def
 0.707106 mul /t1 exch def
 t0 neg t0 rm
 t1 dup neg rl
 t1 neg 0 rm
 t1 dup rl
 t0 neg dup rm
 end
} def
/boxdict 3 dict def
/_box {
 boxdict begin
 dup 0.5 mul /t0 exch def
 1 mul /t1 exch def
 t0 neg t0 rm
 t1 0 rl
 0 t1 neg rl
 t1 neg 0 rl
 h
 t0 dup neg rm
 end
} def
/filledboxdict 3 dict def
/_filledbox {
 filledboxdict begin
 dup 0.5 mul /t0 exch def
 1 mul /t1 exch def
 t0 neg t0 rm
 t1 0 rl
 0 t1 neg rl
 t1 neg 0 rl
 h
 t0 dup neg rm
 F end
} def
/diamonddict 2 dict def
/_diamond {
 diamonddict begin
 0.5 mul /t0 exch def
 t0 neg 0 rm
 t0 dup rl
 t0 dup neg rl
 t0 neg dup rl
 h
 t0 0 rm
 end
} def
/filleddiamonddict 2 dict def
/_filleddiamond {
 filleddiamonddict begin
 0.5 mul /t0 exch def
 t0 neg 0 rm
 t0 dup rl
 t0 dup neg rl
 t0 neg dup rl
 h
 t0 0 rm
 F end
} def
/triangleupdict 5 dict def
/_triangleup {
 triangleupdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 neg rm
 t1 t2 rl
 t1 t2 neg rl
 h
 t1 t0 rm
 end
} def
/filledtriangleupdict 5 dict def
/_filledtriangleup {
 filledtriangleupdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 neg rm
 t1 t2 rl
 t1 t2 neg rl
 h
 t1 t0 rm
 F end
} def
/trianglerightdict 5 dict def
/_triangleright {
 trianglerightdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 neg t1 rm
 t2 t1 neg rl
 t2 neg t1 neg rl
 h
 t0 t1 neg rm
 end
} def
/filledtrianglerightdict 5 dict def
/_filledtriangleright {
 filledtrianglerightdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 neg t1 rm
 t2 t1 neg rl
 t2 neg t1 neg rl
 h
 t0 t1 neg rm
 F end
} def
/triangledowndict 5 dict def
/_triangledown {
 triangledowndict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 rm
 t3 0 rl
 t1 neg t2 neg rl
 h
 t1 t0 neg rm
 end
} def
/filledtriangledowndict 5 dict def
/_filledtriangledown {
 filledtriangledowndict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 rm
 t3 0 rl
 t1 neg t2 neg rl
 h
 t1 t0 neg rm
 F end
} def
/triangleleftdict 5 dict def
/_triangleleft {
 triangleleftdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 t1 rm
 0 t3 neg rl
 t2 neg t1 rl
 h
 t0 neg t1 neg rm
 end
} def
/filledtriangleleftdict 5 dict def
/_filledtriangleleft {
 filledtriangleleftdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 t1 rm
 0 t3 neg rl
 t2 neg t1 rl
 h
 t0 neg t1 neg rm
 F end
} def
/circdict 5 dict def
/_circ {
 circdict begin
 0.5 mul /t0 exch def
 currentpoint
 /t2 exch def
 /t1 exch def
 S n t1 t2 t0 0 360 arc
 t1 t2 m
 end
} def
/bulldict 3 dict def
/_bull {
 bulldict begin
 0.5 mul /r exch def
 currentpoint /y exch def /x exch def
 S n x y r 0 360 arc h F S
 end
} def
/filledhalfmoonupdict 3 dict def
/_filledhalfmoonup {
 bulldict begin
 0.5 mul /r exch def
 currentpoint /y exch def /x exch def
 S n x y r 0 180 arc h F S
 end
} def
/filledhalfmoondowndict 3 dict def
/_filledhalfmoondown {
 bulldict begin
 0.5 mul /r exch def
 currentpoint /y exch def /x exch def
 S n x y r 180 360 arc h F S
 end
} def
1 1 scale
10.0 M
1 j
%%EndProlog
%%Page: 1 1
/Helvetica findfont 12.00 sc sf
%gri:// BEGIN (~/.grirc)

%gri:// begin(.grirc) $Id: example.ps,v 1.1 2000/05/11 15:07:30 dankelley Exp $
%gri:`Bin with  x .min. .max. .inc. \in_file \out_file'
%gri:Creates \out_file from \in_file.  In each of these files, column 1
%gri:represents x and column 2 represents y.  The \out_file file contains the
%gri:average values of y in x bands of width .inc., centred at .min.,
%gri:(.min.+.inc.), up to .max, and with missing values inserted in bands with
%gri:no x-data in \in_file. Each x-band is represented in \out_file by a
%gri:plateau in y, and adjacent bands with non-missing data are connnected by
%gri:vertical lines; the effect is a skyline plot of the banded means.  Sample
%gri:application: plot monthly means of a variable.
%gri:{
%gri:    if {rpn \.words. 8 !=}
%gri:        show "ERROR: `\.proper_usage.' called without"
%gri:        show "       giving the parameters .min., .max., .inc., and \filename."
%gri:        quit 1
%gri:    end if
%gri:    system perl <<"EOF"
%gri:    $min = \.word3.;
%gri:    $max = \.word4.;
%gri:    $inc = \.word5.;
%gri:    open(IN,   "\.word6.") || die "`\.proper_usage.' cannot open input file";
%gri:    open(OUT, ">\.word7.") || die "`\.proper_usage.' cannot open output file";
%gri:
%gri:    $n = ($max - $min) / $inc;
%gri:    #
%gri:    # Set up bins.
%gri:    for($i = 0; $i <= $n; $i++) {
%gri:       $xx[$i] = 0;
%gri:       $yy[$i] = 0;
%gri:       $nn[$i] = 0;
%gri:    }
%gri:    while(<IN>) {
%gri:        ($x, $y) = split(' ');
%gri:        $i = int(0.5 + ($x - $min) / $inc);
%gri:        $i =      0 if $i <      0;
%gri:        $i = $n - 1 if $i > $n - 1;
%gri:        if ($x != \.missingvalue. && $y != \.missingvalue.) {
%gri:            $xx[$i] += $x;
%gri:            $yy[$i] += $y;
%gri:            $nn[$i]++;
%gri:        }
%gri:    }
%gri:    for($i = 0; $i <= $n; $i++) {
%gri:        if ($nn[$i] > 0) {
%gri:            $xx[$i] /= $nn[$i];
%gri:            $yy[$i] /= $nn[$i];
%gri:            $xleft  = $min + $inc * ($i - 0.5);
%gri:            $xright = $min + $inc * ($i + 0.5);
%gri:            #
%gri:            # If datum to left non-missing, draw vertical line
%gri:            # down to that last yy value.
%gri:            if ($i > 0 && $nn[$i - 1] > 0) {
%gri:                print OUT "$xleft $yy[$i - 1]\n";
%gri:            } else {
%gri:                print OUT "$xleft \.missingvalue.\n"
%gri:            }
%gri:            print OUT "$xleft  $yy[$i]\n";
%gri:            print OUT "$xright $yy[$i]\n";
%gri:        }
%gri:    }
%gri:    
%gri:EOF
%gri:}
%gri:
%gri:read colornames from RGB "/usr/lib/X11/rgb.txt"
%gri://show hint of the day
%gri:// end(.grirc)
%gri:// END   (~/.grirc)

%gri:// Example 10 -- colorscale for GEBCO altimetry charts
%gri://
%gri:// Contributed 31 July 1996 by Dan Kelley <Dan.Kelley@Dal.CA>
%gri:
%gri:`Set image colorscale gebco'
%gri:Set up colors for gebco charts of ocean/land altimetry.
%gri:{
%gri:    set image range -5000 500
%gri:    open "\.awk. 'BEGIN { \
%gri:        for (i = 0; i < 256; i++) { \
%gri:            if (i <= 278) {R=0.820; G=0.604; B=0.361;}\
%gri:            if (i <= 255) {R=0.863; G=0.659; B=0.396;}\
%gri:            if (i <= 241) {R=0.902; G=0.714; B=0.439;}\
%gri:            if (i <= 236) {R=0.945; G=0.765; B=0.478;}\
%gri:            if (i <= 232) {R=0.882; G=0.988; B=0.969;}\
%gri:            if (i <= 227) {R=0.749; G=0.949; B=0.925;}\
%gri:            if (i <= 223) {R=0.627; G=0.910; B=0.894;}\
%gri:            if (i <= 209) {R=0.514; G=0.871; B=0.871;}\
%gri:            if (i <= 185) {R=0.408; G=0.804; B=0.831;}\
%gri:            if (i <= 139) {R=0.310; G=0.733; B=0.788;}\
%gri:            if (i <=  93) {R=0.220; G=0.655; B=0.749;}\
%gri:            if (i <=  46) {R=0.133; G=0.573; B=0.710;}\
%gri:            if (i <=   0) {R=0.059; G=0.486; B=0.671;}\
%gri:            print(R, G, B); \
%gri:        } \
%gri:    }' |"
%gri:    read image colorscale rgb
%gri:    close
%gri:}
%gri:
%gri:set x axis 0 1
%gri:set y axis 0 1
%gri:Set image colorscale gebco
%gri:draw image palette left -6000 right 1000 increment 1000
%^ scale 1 170.7 0 284.5 1 170.7 0 284.5
q n % turn clipping on for image palette
170.700000 512.100000 moveto
455.200000 512.100000 lineto
455.200000 540.550000 lineto
170.700000 540.550000 lineto
170.700000 512.100000 lineto
closepath W
170.421624 512.100000 455.478376 540.550000 1 512 cim
0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB
0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB
0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB
0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB
0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB
0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB0F7CAB2292B52292B52292B52292B5
2292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B5
2292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B5
2292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B5
2292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B5
2292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B52292B5
2292B52292B52292B52292B538A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF
38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF
38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF
38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF
38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF
38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF38A7BF
4FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC9
4FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC9
4FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC9
4FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC9
4FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC9
4FBBC94FBBC94FBBC94FBBC94FBBC94FBBC94FBBC968CDD468CDD468CDD468CDD468CDD468CDD4
68CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD4
68CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD4
68CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD4
68CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD4
68CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD468CDD4
68CDD468CDD483DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE
83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE
83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE83DEDE
A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4
A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4A0E8E4BFF2ECBFF2ECBFF2ECBFF2EC
BFF2ECBFF2ECBFF2ECE1FCF7E1FCF7E1FCF7E1FCF7E1FCF7E1FCF7E1FCF7E1FCF7F1C37AF1C37A
F1C37AF1C37AF1C37AF1C37AE6B670E6B670E6B670E6B670E6B670E6B670E6B670E6B670DCA865
DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865
DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865
DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865
DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865DCA865
DCA865DCA865DCA865DCA865DCA865
S Q % turn clipping off for image palette
% gr_show_at() BEGIN
0 g
0 G
155.3 491.3 m (-6000) sh
% gr_show_at() END
% gr_show_at() BEGIN
0 g
0 G
195.9 491.3 m (-5000) sh
% gr_show_at() END
% gr_show_at() BEGIN
0 g
0 G
236.6 491.3 m (-4000) sh
% gr_show_at() END
% gr_show_at() BEGIN
0 g
0 G
277.2 491.3 m (-3000) sh
% gr_show_at() END
% gr_show_at() BEGIN
0 g
0 G
317.9 491.3 m (-2000) sh
% gr_show_at() END
% gr_show_at() BEGIN
0 g
0 G
358.5 491.3 m (-1000) sh
% gr_show_at() END
% gr_show_at() BEGIN
0 g
0 G
411.2 491.3 m (0) sh
% gr_show_at() END
% gr_show_at() BEGIN
0 g
0 G
441.8 491.3 m (1000) sh
% gr_show_at() END
0 g
0 G
1.0 i 0 J 0 j 0.369 w 10.0 M [] 0 d
170.7 512.1 m
170.7 512.1 l
170.7 506.4 l
170.7 512.1 l
211.3 512.1 l
211.3 506.4 l
211.3 512.1 l
252.0 512.1 l
252.0 506.4 l
252.0 512.1 l
292.6 512.1 l
292.6 506.4 l
292.6 512.1 l
333.3 512.1 l
333.3 506.4 l
333.3 512.1 l
373.9 512.1 l
373.9 506.4 l
373.9 512.1 l
414.6 512.1 l
414.6 506.4 l
414.6 512.1 l
455.2 512.1 l
455.2 506.4 l
455.2 512.1 l
455.2 512.1 l
S
% END GriPath stroke/fill
0 g
0 G
1.0 i 0 J 0 j 0.709 w 10.0 M [] 0 d
170.7 512.1 m
170.7 540.5 l
455.2 540.5 l
455.2 512.1 l
S
% END GriPath stroke/fill
showpage
%%Trailer
%%BoundingBox: 153 472 471 543
%%DocumentFonts: Courier Helvetica Palatino-Roman Palatino-Italic Symbol Times-Roman ZapfChancery ZapfChancery-MediumItalic
%%Pages: 1
