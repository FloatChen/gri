%!PS-Adobe-2.0 EPSF-1.2
%%Creator: Gri2.048 for kelley. [example -> example.ps]
%%Title: example.ps
%%CreationDate: Mon May  6 17:38:32 1996
%%Pages: (atend)
%%BoundingBox: 129 130 463 463
%%TemplateBox: 0 0 612 792
%%DocumentFonts: (atend)
%%Endcomments
% The Gri postscript dictionary is being migrated towards the Adobe
% Illustrator 88 format, as described in the specifications document
% version 2.0, dated July 18, 1990.  This document is available from
% the mailserver ps-file-server.adobe.com and the ftp site
% ftp.mv.us.adobe.com (file pub/adobe/Documents/AIformat.ps).
%
% When the dictionary conversion is complete, the Adobe Illustrator
% drawing program will be able to read Gri files, so you can use
% Illustrator to modify your Gri drawings.
%
% Presently, you can edit Gri PostScript output using the
% IslandDraw (TM) program.
%
% The definitions below are presented in the same order as the Adobe
% manual.  The stack configuration before and after is shown in curly
% brackets.  All the operators are listed, but only some are defined
% here. Most things are faithful, except that no distinction is made
% between colors for stroking and filling paths.  The string 'WRONGLY'
% appears with commands that are approximations.
%
% Gri-specific abbreviations:
/rgb {setrgbcolor} def  % {red green blue}            {-} set RGB color
/hsb {sethsbcolor} def  % {hue saturation brightness} {-} set HSB color
%
% Mimicking section 5.1 of Adobe manual:
%A                      % {flag A}          {-} Determine whether
                        %                       following object can
                        %                       be selected. Flag=1
                        %                       prevents selection;
                        %                       flag=0 allows it.

% Mimicking section 5.2 of Adobe manual:
%u                      % {u}               {-} start group
%U                      % end group
%q                      % as 'u' but first item is a clip path
%Q                      % as 'U' but first item is a clip path

% Mimicking section 5.3 of Adobe manual:
/g {setgray} def        % {gray g}          {-} Set gray for fill
                        %                       path, WRONGLY used
                        %                       for stroking also. 
%G                      % As 'g', but for filling path.
%k                      % Set cmyk color for filling path.
%K                      % As 'k', but for stroking path.
%x                      % Set cmyk custom color for filling path.
%X                      % As 'x' but for stroking path.
%p                      % Define pattern for filling path.
%P                      % As 'p' but for stroking path.
%O                      % Specify whether overprinting for fill paths
%R                      % As 'O' but for stroking path.

% Mimicking section 5.4 of Adobe manual:
/d {setdash} def        % {[array] phase d} {-} Set dash.
/i {setflat} def        % {flatness i}      {-} Set flatness.
/j {setlinejoin} def    % {linejoin j}      {-} Set line join.
/J {setlinecap} def     % {linecap J}       {-} Set line cap.
/M {setmiterlimit} def  % {miterlimit M}    {-} Set miter limit.
/w {setlinewidth} def   % {linewidth w}     {-} Set line width.

% Mimicking section 5.5 of Adobe manual:
/m {moveto} def         % {x y m}           {-} Move to locn
/l {lineto} def         % {x y l}           {-} Draw line to locn
                        %                       not a smooth point.
                        %                       WRONGLY, no
                        %                       distinction is made
                        %                       between smooth and
                        %                       corner. 
%L                      % {x y L}           {-} As 'l' but a corner
%c                      % Bezier curve to smooth point.
%C                      % As 'c' but to corner point.
%v                      % Something else to do with Bezier.
%V                      % 
%y                      % 
%Y                      % 

% Mimicking section 5.6 of Adobe manual:
%N                      % {N}               {-} As 'n' for nondrawn stuff
/n {newpath} def        % {n}               {-} WRONGLY interpreted
                        %                       as path constructor
/F {fill} def           % {F}               {-} Fill current path.
%f                      % {f}               {-} 'F' but close first
/S {stroke} def         % {S}               {-} Stroke current path.
%s                      % {s}               {-} 'S' but close first
%B                      % {B}               {-} As 's' but don't empty path.
%b                      % {b}               {-} As 'f' but don't empty path.
%H                      % no-op (weird huh?)
/h {closepath} def      % {h}               {-} Close  current path
%W                      % Used to create masks.

% Mimicking section 5.7 of Adobe manual:
%a                      % Begin text block ...
%e                      % Similar to 'a' but ...
%I                      % Similar to 'a' but ...
%o                      % Similar to 'a' but ...
%r                      % Similar to 'a' but ...
%t                      % {len (string) t}  {-} Render string.
%T                      % End block of text

% That's the end of the Illustrator stuff. Following are some Gri
% definitions which provide a temporary way of handling fonts. 
/sf {setfont} def       % {fontname sf}     {-} Set font name.
/sh {show} def          % {(text) sh}       {-} Show text.
/sc {scalefont} def     % {size sc}         {-} Scale font.
% Gri items which should be translated to Illustrator format:
/rl {rlineto} def
/rm {rmoveto} def
% Procedures
/cimdict 7 dict def
/cim {
 cimdict begin
 /cl exch def
 /rw exch def
 /yur exch def
 /xur exch def
 /yll exch def
 /xll exch def
 gsave
 xll yll translate
 xur xll sub yur yll sub scale
 /do cl 3 mul string def
 cl rw 8 [cl 0 0 rw neg 0 rw] {currentfile do readhexstring pop} false 3 colorimage
 grestore
 end
} def
/imdict 14 dict def
/im {
 imdict begin
 /cl exch def
 /rw exch def
 /yur exch def
 /xur exch def
 /yll exch def
 /xll exch def
 /imagemap exch def
 gsave
 % Add the mapping to the transfer function (ref: white book, p 743.
 [{255 mul cvi imagemap exch get} /exec load currenttransfer /exec load]
   cvx settransfer
 xll yll translate
 xur xll sub yur yll sub scale
 /do cl string def
 cl rw 8 [cl 0 0 rw neg 0 rw] {currentfile do readhexstring pop}image
 grestore
 end
} def
/frdict  5 dict def
/fr {
 frdict begin
 /yt exch def
 /xr exch def
 /yb exch def
 /xl exch def
 n
 xl yb m
 xl yt l
 xr yt l
 xr yb l
 h
 F
 n
 end
} def
/plusdict 3 dict def
/_plus {
 plusdict begin
 dup 0.5 mul /t0 exch def
 /t1 exch def
 0 t0 rm
 0 t1 neg rl
 t0 neg t0 rm
 t1 0 rl
 t0 neg 0 rm
 end
} def
/timesdict 3 dict def
/_times {
 timesdict begin
 dup 0.353553 mul /t0 exch def
 0.707106 mul /t1 exch def
 t0 neg t0 rm
 t1 dup neg rl
 t1 neg 0 rm
 t1 dup rl
 t0 neg dup rm
 end
} def
/boxdict 3 dict def
/_box {
 boxdict begin
 dup 0.5 mul /t0 exch def
 1 mul /t1 exch def
 t0 neg t0 rm
 t1 0 rl
 0 t1 neg rl
 t1 neg 0 rl
 h
 t0 dup neg rm
 end
} def
/filledboxdict 3 dict def
/_filledbox {
 filledboxdict begin
 dup 0.5 mul /t0 exch def
 1 mul /t1 exch def
 t0 neg t0 rm
 t1 0 rl
 0 t1 neg rl
 t1 neg 0 rl
 h
 t0 dup neg rm
 F end
} def
/diamonddict 2 dict def
/_diamond {
 diamonddict begin
 0.5 mul /t0 exch def
 t0 neg 0 rm
 t0 dup rl
 t0 dup neg rl
 t0 neg dup rl
 h
 t0 0 rm
 end
} def
/filleddiamonddict 2 dict def
/_filleddiamond {
 filleddiamonddict begin
 0.5 mul /t0 exch def
 t0 neg 0 rm
 t0 dup rl
 t0 dup neg rl
 t0 neg dup rl
 h
 t0 0 rm
 F end
} def
/triangleupdict 5 dict def
/_triangleup {
 triangleupdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 neg rm
 t1 t2 rl
 t1 t2 neg rl
 h
 t1 t0 rm
 end
} def
/filledtriangleupdict 5 dict def
/_filledtriangleup {
 filledtriangleupdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 neg rm
 t1 t2 rl
 t1 t2 neg rl
 h
 t1 t0 rm
 F end
} def
/trianglerightdict 5 dict def
/_triangleright {
 trianglerightdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 neg t1 rm
 t2 t1 neg rl
 t2 neg t1 neg rl
 h
 t0 t1 neg rm
 end
} def
/filledtrianglerightdict 5 dict def
/_filledtriangleright {
 filledtrianglerightdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 neg t1 rm
 t2 t1 neg rl
 t2 neg t1 neg rl
 h
 t0 t1 neg rm
 F end
} def
/triangledowndict 5 dict def
/_triangledown {
 triangledowndict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 rm
 t3 0 rl
 t1 neg t2 neg rl
 h
 t1 t0 neg rm
 end
} def
/filledtriangledowndict 5 dict def
/_filledtriangledown {
 filledtriangledowndict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t1 neg t0 rm
 t3 0 rl
 t1 neg t2 neg rl
 h
 t1 t0 neg rm
 F end
} def
/triangleleftdict 5 dict def
/_triangleleft {
 triangleleftdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 t1 rm
 0 t3 neg rl
 t2 neg t1 rl
 h
 t0 neg t1 neg rm
 end
} def
/filledtriangleleftdict 5 dict def
/_filledtriangleleft {
 filledtriangleleftdict begin
 dup 0.25 mul /t0 exch def
 dup 0.433013 mul /t1 exch def
 dup 0.75 mul /t2 exch def
 0.866026 mul /t3 exch def
 t0 t1 rm
 0 t3 neg rl
 t2 neg t1 rl
 h
 t0 neg t1 neg rm
 F end
} def
/circdict 5 dict def
/_circ {
 circdict begin
 0.5 mul /t0 exch def
 currentpoint
 /t2 exch def
 /t1 exch def
 S n t1 t2 t0 0 360 arc
 t1 t2 m
 end
} def
/bulldict 3 dict def
/_bull {
 bulldict begin
 0.5 mul /r exch def
 currentpoint /y exch def /x exch def
 S n x y r 0 360 arc h F S
 end
} def
1.000000 1.000000 scale
10.0 M
1 j
%%EndProlog
%%Page: 1 1
/Helvetica findfont 12.00 sc sf
n
0.0 0.0 m
0.000 g
S
n
0.0 0.0 m
[] 0 d
S
n
0.0 0.0 m
0.500 w
n
S
n
0.0 0.0 m
%gri:// BEGIN (~/.grirc)

%gri:// begin(.grirc) $Id: example.ps,v 1.2 2000/05/25 17:06:03 psg Exp $
%gri:`Bin with  x .min. .max. .inc. \in_file \out_file'
%gri:Creates \out_file from \in_file.  In each of these files, column 1
%gri:represents x and column 2 represents y.  The \out_file file contains the
%gri:average values of y in x bands of width .inc., centred at .min.,
%gri:(.min.+.inc.), up to .max, and with missing values inserted in bands with
%gri:no x-data in \in_file. Each x-band is represented in \out_file by a
%gri:plateau in y, and adjacent bands with non-missing data are connnected by
%gri:vertical lines; the effect is a skyline plot of the banded means.  Sample
%gri:application: plot monthly means of a variable.
%gri:{
%gri:    if {rpn \.words. 8 !=}
%gri:        show "ERROR: `\.proper_usage.' called without"
%gri:        show "       giving the parameters .min., .max., .inc., and \filename."
%gri:        quit 1
%gri:    end if
%gri:    system perl <<"EOF"
%gri:    $min = \.word3.;
%gri:    $max = \.word4.;
%gri:    $inc = \.word5.;
%gri:    open(IN,   "\.word6.") || die "`\.proper_usage.' cannot open input file";
%gri:    open(OUT, ">\.word7.") || die "`\.proper_usage.' cannot open output file";
%gri:    $n = ($max - $min) / $inc;
%gri:    #
%gri:    # Set up bins.
%gri:    for($i = 0; $i <= $n; $i++) {
%gri:       $xx[$i] = 0;
%gri:       $yy[$i] = 0;
%gri:       $nn[$i] = 0;
%gri:    }
%gri:    while(<IN>) {
%gri:        ($x, $y) = split(' ');
%gri:        $i = int(0.5 + ($x - $min) / $inc);
%gri:        $i =      0 if $i <      0;
%gri:        $i = $n - 1 if $i > $n - 1;
%gri:        if ($x != \.missingvalue. && $y != \.missingvalue.) {
%gri:            $xx[$i] += $x;
%gri:            $yy[$i] += $y;
%gri:            $nn[$i]++;
%gri:        }
%gri:    }
%gri:    for($i = 0; $i <= $n; $i++) {
%gri:        if ($nn[$i] > 0) {
%gri:            $xx[$i] /= $nn[$i];
%gri:            $yy[$i] /= $nn[$i];
%gri:            $xleft  = $min + $inc * ($i - 0.5);
%gri:            $xright = $min + $inc * ($i + 0.5);
%gri:            #
%gri:            # If datum to left non-missing, draw vertical line
%gri:            # down to that last yy value.
%gri:            if ($i > 0 && $nn[$i - 1] > 0) {
%gri:                print OUT "$xleft $yy[$i - 1]\n";
%gri:            } else {
%gri:                print OUT "$xleft \.missingvalue.\n"
%gri:            }
%gri:            print OUT "$xleft  $yy[$i]\n";
%gri:            print OUT "$xright $yy[$i]\n";
%gri:        }
%gri:    }
%gri:    
%gri:EOF
%gri:}
%gri:
%gri:read colornames from RGB "/usr/lib/X11/rgb.txt"
%gri://show hint of the day
%gri:// end(.grirc)
%gri:// END   (~/.grirc)

%gri:// Example 2 -- Contour Plot, Pre-gridded Data (Black/White)
%gri://
%gri:// This file is called
%gri:// ~ftp/pub/receive/kelley/gri/cookbook/example2.gri (at Dalhousie Univ.)
%gri://      pub/receive/kelley/gri/cookbook/example2.gri (anonymous@ftp.cs.dal.ca)
%gri://
%gri:// Contributed 13 Feb 1994 by Dan Kelley (Dan.Kelley@Dal.Ca).
%gri://
%gri:// Draw contours for pre-gridded data.  Uses data read in from
%gri:// commandfile, but extension to larger datasets stored in files
%gri:// is trivial.
%gri:
%gri:// Read x-grid; blank-line means stop reading.
%gri:read grid x
%gri:0

%gri:.2

%gri:1

%gri:

%gri:// Note that the x-grid was irregular.  The y-grid
%gri:// in this example is regular, so we can just set
%gri:// it to range from 10 to 20, incrementing by 2.5.
%gri:set y grid 10 20 2.5
%gri:// Thus we now have a grid 3 wide and 5 high.  Let's
%gri:// read the actual data now.
%gri:read grid data
%gri:1 2 3

%gri:2 3 4

%gri:3 4 5

%gri:4 5 6

%gri:5 6 7

%gri:// Now draw contours (automatically set; we could
%gri:// have done `draw contour 2' to draw contour fro
%gri:// value 2 or `draw contour 1 10 2' to draw contours
%gri:// ranging from 1 to 10 with an increment of 2.)
%gri:draw contour
% BEGIN  set_environment
S
n
0.0 0.0 m
S
n
0.0 0.0 m
0.000 0.000 0.000 rgb
S
n
0.0 0.0 m
[] 0 d
S
n
0.0 0.0 m
0.709 w
%^ scale 1 170.700000 0.000000 284.500000 1 170.700000 10.000000 28.450000

% END  set_environment
S
n
0.0 0.0 m
0.709 w
% GriPath::stroke() object at address efffeb30 has depth=3; capacity=6
S
n
227.6 170.7 m
341.4 206.3 l
455.2 241.8 l
S
n
455.2 241.8 m
S
n
455.2 241.8 m
0.000 0.000 0.000 rgb
S
n
455.2 241.8 m
1.000 1.000 1.000 rgb
S
newpath
336.4 199.4 m
336.4 199.4 l
346.4 199.4 l
346.4 211.4 l
336.4 211.4 l
336.4 211.4 l
h
F
S
n
336.4 199.4 m
0.000 0.000 0.000 rgb
S
n
338.1 201.1 m
0.00 rotate
(6) sh
-0.00 rotate
S
n
338.1 201.1 m
0.000 0.000 0.000 rgb
% GriPath::stroke() object at address efffeb30 has depth=5; capacity=10
S
n
170.7 170.7 m
199.1 206.3 l
227.6 241.8 l
341.4 277.4 l
455.2 312.9 l
S
n
455.2 312.9 m
S
n
455.2 312.9 m
0.000 0.000 0.000 rgb
S
n
455.2 312.9 m
1.000 1.000 1.000 rgb
S
newpath
194.1 199.4 m
194.1 199.4 l
204.2 199.4 l
204.2 211.4 l
194.1 211.4 l
194.1 211.4 l
h
F
S
n
194.1 199.4 m
0.000 0.000 0.000 rgb
S
n
195.8 201.1 m
0.00 rotate
(5) sh
-0.00 rotate
S
n
195.8 201.1 m
0.000 0.000 0.000 rgb
% GriPath::stroke() object at address efffeb30 has depth=5; capacity=10
S
n
170.7 241.8 m
199.1 277.4 l
227.6 312.9 l
341.4 348.5 l
455.2 384.1 l
S
n
455.2 384.1 m
S
n
455.2 384.1 m
0.000 0.000 0.000 rgb
S
n
455.2 384.1 m
1.000 1.000 1.000 rgb
S
newpath
194.1 270.6 m
194.1 270.6 l
204.2 270.6 l
204.2 282.5 l
194.1 282.5 l
194.1 282.5 l
h
F
S
n
194.1 270.6 m
0.000 0.000 0.000 rgb
S
n
195.8 272.2 m
0.00 rotate
(4) sh
-0.00 rotate
S
n
195.8 272.2 m
0.000 0.000 0.000 rgb
% GriPath::stroke() object at address efffeb30 has depth=5; capacity=10
S
n
170.7 312.9 m
199.1 348.5 l
227.6 384.1 l
341.4 419.6 l
455.2 455.2 l
S
n
455.2 455.2 m
S
n
455.2 455.2 m
0.000 0.000 0.000 rgb
S
n
455.2 455.2 m
1.000 1.000 1.000 rgb
S
newpath
194.1 341.7 m
194.1 341.7 l
204.2 341.7 l
204.2 353.7 l
194.1 353.7 l
194.1 353.7 l
h
F
S
n
194.1 341.7 m
0.000 0.000 0.000 rgb
S
n
195.8 343.4 m
0.00 rotate
(3) sh
-0.00 rotate
S
n
195.8 343.4 m
0.000 0.000 0.000 rgb
% GriPath::stroke() object at address efffeb30 has depth=3; capacity=6
S
n
170.7 384.1 m
199.1 419.6 l
227.6 455.2 l
S
n
227.6 455.2 m
S
n
227.6 455.2 m
0.000 0.000 0.000 rgb
S
n
227.6 455.2 m
1.000 1.000 1.000 rgb
S
newpath
194.1 412.8 m
194.1 412.8 l
204.2 412.8 l
204.2 424.8 l
194.1 424.8 l
194.1 424.8 l
h
F
S
n
194.1 412.8 m
0.000 0.000 0.000 rgb
S
n
195.8 414.5 m
0.00 rotate
(2) sh
-0.00 rotate
S
n
195.8 414.5 m
0.000 0.000 0.000 rgb
% GriPath::stroke() object at address efffeb30 has depth=1; capacity=2
S
n
170.7 455.2 m
S
n
170.7 455.2 m
S
n
170.7 455.2 m
[] 0 d
S
n
170.7 455.2 m
0.369 w
S
n
167.4 149.9 m
-0.00 rotate
(0) sh
0.00 rotate
S
n
190.8 149.9 m
-0.00 rotate
(0.1) sh
0.00 rotate
S
n
219.2 149.9 m
-0.00 rotate
(0.2) sh
0.00 rotate
S
n
247.7 149.9 m
-0.00 rotate
(0.3) sh
0.00 rotate
S
n
276.1 149.9 m
-0.00 rotate
(0.4) sh
0.00 rotate
S
n
304.6 149.9 m
-0.00 rotate
(0.5) sh
0.00 rotate
S
n
333.0 149.9 m
-0.00 rotate
(0.6) sh
0.00 rotate
S
n
361.5 149.9 m
-0.00 rotate
(0.7) sh
0.00 rotate
S
n
389.9 149.9 m
-0.00 rotate
(0.8) sh
0.00 rotate
S
n
418.4 149.9 m
-0.00 rotate
(0.9) sh
0.00 rotate
S
n
451.9 149.9 m
-0.00 rotate
(1) sh
0.00 rotate
% GriPath::stroke() object at address efffeb18 has depth=46; capacity=64
S
n
170.7 170.7 m
170.7 170.7 l
170.7 165.0 l
S
n
170.7 170.7 m
S
n
170.7 170.7 m
199.1 170.7 l
199.1 165.0 l
S
n
199.1 170.7 m
S
n
199.1 170.7 m
227.6 170.7 l
227.6 165.0 l
S
n
227.6 170.7 m
S
n
227.6 170.7 m
256.1 170.7 l
256.1 165.0 l
S
n
256.1 170.7 m
S
n
256.1 170.7 m
284.5 170.7 l
284.5 165.0 l
S
n
284.5 170.7 m
S
n
284.5 170.7 m
312.9 170.7 l
312.9 165.0 l
S
n
312.9 170.7 m
S
n
312.9 170.7 m
341.4 170.7 l
341.4 165.0 l
S
n
341.4 170.7 m
S
n
341.4 170.7 m
369.9 170.7 l
369.9 165.0 l
S
n
369.9 170.7 m
S
n
369.9 170.7 m
398.3 170.7 l
398.3 165.0 l
S
n
398.3 170.7 m
S
n
398.3 170.7 m
426.8 170.7 l
426.8 165.0 l
S
n
426.8 170.7 m
S
n
426.8 170.7 m
455.2 170.7 l
455.2 165.0 l
S
n
455.2 170.7 m
S
n
455.2 170.7 m
455.2 170.7 l
S
n
455.2 170.7 m
S
n
310.0 134.7 m
0.00 rotate
(x) sh
-0.00 rotate
/Helvetica findfont 0.00 sc sf
% GriPath::stroke() object at address efffeb18 has depth=46; capacity=64
S
n
170.7 455.2 m
170.7 455.2 l
170.7 460.9 l
S
n
170.7 455.2 m
S
n
170.7 455.2 m
199.1 455.2 l
199.1 460.9 l
S
n
199.1 455.2 m
S
n
199.1 455.2 m
227.6 455.2 l
227.6 460.9 l
S
n
227.6 455.2 m
S
n
227.6 455.2 m
256.1 455.2 l
256.1 460.9 l
S
n
256.1 455.2 m
S
n
256.1 455.2 m
284.5 455.2 l
284.5 460.9 l
S
n
284.5 455.2 m
S
n
284.5 455.2 m
312.9 455.2 l
312.9 460.9 l
S
n
312.9 455.2 m
S
n
312.9 455.2 m
341.4 455.2 l
341.4 460.9 l
S
n
341.4 455.2 m
S
n
341.4 455.2 m
369.9 455.2 l
369.9 460.9 l
S
n
369.9 455.2 m
S
n
369.9 455.2 m
398.3 455.2 l
398.3 460.9 l
S
n
398.3 455.2 m
S
n
398.3 455.2 m
426.8 455.2 l
426.8 460.9 l
S
n
426.8 455.2 m
S
n
426.8 455.2 m
455.2 455.2 l
455.2 460.9 l
S
n
455.2 455.2 m
S
n
455.2 455.2 m
455.2 455.2 l
S
n
455.2 455.2 m
/Helvetica findfont 12.00 sc sf
S
n
145.8 166.4 m
0.00 rotate
(10) sh
-0.00 rotate
S
n
145.8 194.8 m
0.00 rotate
(11) sh
-0.00 rotate
S
n
145.8 223.3 m
0.00 rotate
(12) sh
-0.00 rotate
S
n
145.8 251.7 m
0.00 rotate
(13) sh
-0.00 rotate
S
n
145.8 280.2 m
0.00 rotate
(14) sh
-0.00 rotate
S
n
145.8 308.6 m
0.00 rotate
(15) sh
-0.00 rotate
S
n
145.8 337.1 m
0.00 rotate
(16) sh
-0.00 rotate
S
n
145.8 365.5 m
0.00 rotate
(17) sh
-0.00 rotate
S
n
145.8 394.0 m
0.00 rotate
(18) sh
-0.00 rotate
S
n
145.8 422.4 m
0.00 rotate
(19) sh
-0.00 rotate
S
n
145.8 450.9 m
0.00 rotate
(20) sh
-0.00 rotate
% GriPath::stroke() object at address efffeae8 has depth=35; capacity=64
S
n
170.7 170.7 m
170.7 170.7 l
165.0 170.7 l
S
n
170.7 170.7 m
170.7 199.1 l
165.0 199.1 l
S
n
170.7 199.1 m
170.7 227.6 l
165.0 227.6 l
S
n
170.7 227.6 m
170.7 256.0 l
165.0 256.0 l
S
n
170.7 256.0 m
170.7 284.5 l
165.0 284.5 l
S
n
170.7 284.5 m
170.7 312.9 l
165.0 312.9 l
S
n
170.7 312.9 m
170.7 341.4 l
165.0 341.4 l
S
n
170.7 341.4 m
170.7 369.9 l
165.0 369.9 l
S
n
170.7 369.9 m
170.7 398.3 l
165.0 398.3 l
S
n
170.7 398.3 m
170.7 426.8 l
165.0 426.8 l
S
n
170.7 426.8 m
170.7 455.2 l
165.0 455.2 l
S
n
170.7 455.2 m
170.7 455.2 l
S
n
170.7 455.2 m
S
n
139.9 309.9 m
90.00 rotate
(y) sh
-90.00 rotate
/Helvetica findfont 0.00 sc sf
% GriPath::stroke() object at address efffeae8 has depth=35; capacity=64
S
n
455.2 170.7 m
455.2 170.7 l
460.9 170.7 l
S
n
455.2 170.7 m
455.2 199.1 l
460.9 199.1 l
S
n
455.2 199.1 m
455.2 227.6 l
460.9 227.6 l
S
n
455.2 227.6 m
455.2 256.0 l
460.9 256.0 l
S
n
455.2 256.0 m
455.2 284.5 l
460.9 284.5 l
S
n
455.2 284.5 m
455.2 312.9 l
460.9 312.9 l
S
n
455.2 312.9 m
455.2 341.4 l
460.9 341.4 l
S
n
455.2 341.4 m
455.2 369.9 l
460.9 369.9 l
S
n
455.2 369.9 m
455.2 398.3 l
460.9 398.3 l
S
n
455.2 398.3 m
455.2 426.8 l
460.9 426.8 l
S
n
455.2 426.8 m
455.2 455.2 l
460.9 455.2 l
S
n
455.2 455.2 m
455.2 455.2 l
S
n
455.2 455.2 m
/Helvetica findfont 12.00 sc sf
%gri:quit
S
showpage
%%Trailer
%%DocumentFonts: Courier Helvetica Palatino-Roman Palatino-Italic Symbol Times-Roman ZapfChancery ZapfChancery-MediumItalic
%%Pages: 1
